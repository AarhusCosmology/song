tol_perturb_integration_2nd_order=1e-4
tol_perturb_integration=1e-5

l_max_scalars = 100
l_logstep = 1.35
l_linstep = 50

sources2_k_sampling = smart

# First-order k-sampling
k_scalar_min_tau0=0.05
k_scalar_max_tau0_over_l_max=2
k_scalar_step_sub=0.1
k_scalar_step_super=0.1
k_scalar_logstep_super=1.4
k_scalar_step_transition=0.2

# Second-order k-sampling REF.PRE
# k_scalar_min_tau0_2nd_order = 0.01
# k_scalar_max_tau0_over_l_max_2nd_order = 2
# k_scalar_step_sub_2nd_order = 0.1
# k_scalar_linstep_super_2nd_order = 0.025
# k_scalar_logstep_super_2nd_order = 1.2
# k_scalar_step_transition_2nd_order = 0.2

# Second-order k-sampling INSTANTANEOUS FOR DEBUG
# k_scalar_min_tau0_2nd_order = 0.1
# k_scalar_max_tau0_over_l_max_2nd_order = 2
# k_scalar_step_sub_2nd_order = 1
# k_scalar_linstep_super_2nd_order = 0.5
# k_scalar_logstep_super_2nd_order = 10
# k_scalar_step_transition_2nd_order = 0.2

# Second-order k-sampling QUICK FOR DEBUG
k_scalar_min_tau0_2nd_order = 0.1
k_scalar_max_tau0_over_l_max_2nd_order = 2
k_scalar_step_sub_2nd_order = 1
k_scalar_linstep_super_2nd_order = 0.5
k_scalar_logstep_super_2nd_order = 1.5
k_scalar_step_transition_2nd_order = 0.2

# Second-order sampling for k3 (lin, log, smart, angle)
sources2_k3_sampling = smart
k3_size_min = 5

# Second-order k-sampling for the transfer functions
k_step_trans_scalars = 0.004
k_step_trans_scalars_2nd_order = 0.004
transfer2_k_sampling = class

# Linear step dx when sampling the j_l1(x) and J_Llm(x) and j_l(x)
bessel_x_step_2nd_order = 0.2
bessel_x_step = 0.2
	
# Interpolation parameters
quadsources_time_interpolation = cubic
sources_time_interpolation = linear
bessels_interpolation = linear
sources_k3_interpolation = linear
transfers_k1_interpolation = linear
transfers_k2_interpolation = linear


	
# ================================================================================
# =                              Time sampling                                   =
# ================================================================================

# When to start evolving the 2nd-order system
tau_start_evolution_2nd_order = 1

# Time sampling of quadratic sources
perturb_sampling_stepsize_for_quadsources = 0.03

# Custom timesampling for the quadratic sources
custom_time_sampling_for_quadsources = no
custom_tau_ini_quadsources = 0.1                # must be smaller than tau_ini_2nd_order_sources (best: 0.1)
custom_tau_end_quadsources = 1000                # enter 0 to save sources up to today (best: 550)
custom_tau_size_quadsources = 1000              
custom_tau_mode_quadsources = log               # either lin, log or class (best: log)

# Timesampling for the first-order line-of-sight sources
start_sources_at_tau_c_over_tau_h = 0.01
perturb_sampling_stepsize = 0.05
match_final_time_los = no

# Time sampling of the second-order line-of-sight sources
perturb_sampling_stepsize_for_2nd_order = 0.4
recombination_max_to_end_ratio = 250

# Custom timesampling for the second-order line-of-sight sources
custom_time_sampling_for_2nd_order_sources = no
custom_tau_ini_2nd_order_sources = 0.5            # must be larger than tau_ini_quadsources
custom_tau_end_2nd_order_sources = 1000              # enter 0 to save sources up to today
custom_tau_size_2nd_order_sources = 500
custom_tau_mode_2nd_order_sources = log             # either lin, log or CLASS

# Integration grid in time for 2nd-order transfer functions
transfer2_tau_sampling = custom
tau_step_trans_2nd_order = 4



# ===========================================================================
# =                        Bispectrum integration                           =
# ===========================================================================


## Bispectrum integration, choose between no_extrapolation, flat_extrapolation, linear_extrapolation
bispectra_k3_extrapolation = no_extrapolation
extra_k3_oscillations_right = 100
extra_k3_oscillations_left = 100


## Bispectrum interpolation in (l1,l2,l3)
bispectra_interpolation = mesh_2d



l_max_g_2nd_order = 12
l_max_ur_2nd_order = 8
l_max_pol_g_2nd_order = 8

l_max_g_quadsources = -1
l_max_ur_quadsources = -1
l_max_pol_g_quadsources = -1

l_max_los_t = 5
l_max_los_quadratic_t = 5

l_max_los_p = 5
l_max_los_quadratic_p = 5

l_max_g = 15
l_max_pol_g = 10
l_max_ur = 10




### Spherical Bessel functions at 2nd-order
# Set Bessels to zero if they are smaller than this.
bessel_j_cut_2nd_order = 1.e-15

# Set J_Llm(x) function to zero if it is smaller than this.
# Note that setting a high value for bessel_j_cut_2nd_order does affect
# the J's too. A rule of thumb is to set bessel_j_cut_2nd_order 5 orders
# of magnitude smaller than bessel_J_cut_2nd_order
bessel_J_cut_2nd_order = 1.e-10


transfer_cut = 1
k_per_decade_primordial = 10.








### At what time shall we start integrating the system?  Here I do not make a distinction between k1 and k2.
### Note that this settings are overridden if the requested tau sampling starts at earlier times.
### The bigger these numbers are, the later the integration starts.

start_small_k_at_tau_c_over_tau_h_2nd_order = 0.004
start_large_k_at_tau_h_over_tau_k_2nd_order = 0.15

## Settings for chi2pl precision files
# start_small_k_at_tau_c_over_tau_h = 0.0015
# start_large_k_at_tau_h_over_tau_k = 0.07
# start_small_k_at_tau_c_over_tau_h_2nd_order = 0.0015
# start_large_k_at_tau_h_over_tau_k_2nd_order = 0.07

## Settings for cl_permille precision files
# start_small_k_at_tau_c_over_tau_h = 0.0004
# start_large_k_at_tau_h_over_tau_k = 0.15
# start_small_k_at_tau_c_over_tau_h_2nd_order = 0.0004
# start_large_k_at_tau_h_over_tau_k_2nd_order = 0.15



### Bessels
# frequency of sampling; typically ~0.3, make lower for better results
# bessel_x_step = 0.5
bessel_j_cut = 1.e-10
bessel_tol_x_min = 1.e-4
bessel_file_name = bessel.dat



# ==========================
# = cl_permille CUSTOMISED =
# ==========================
# this precision file obtained as follows:
# - computing adiabatic scalar unlensed ClT only (ndf15 integrator with AMD)
# - for each precision parameter varied individually, Deltachi2(Planck) between high-precision limit and selected value = 1.e-3  

a_ini_over_a_today_default = 1.e-14
back_integration_stepsize = 7.e-3
tol_background_integration = 1.e-2
tol_ncdm_bg = 1.e-5


recfast_z_initial=1.e4

recfast_Nz0=100000
tol_thermo_integration=1.e-5

recfast_Heswitch=6
recfast_fudge_He=0.86

recfast_Hswitch = 1 #_TRUE_
recfast_fudge_H = 1.14
recfast_delta_fudge_H = -0.035
recfast_AGauss1 = -0.14
recfast_AGauss2 =  0.05
recfast_zGauss1 =  7.28
recfast_zGauss2 =  6.75
recfast_wGauss1 =  0.18
recfast_wGauss2 =  0.33

recfast_z_He_1 = 8000.
recfast_delta_z_He_1 = 50.
recfast_z_He_2 = 5000.
recfast_delta_z_He_2 = 100.
recfast_z_He_3 = 3500.
recfast_delta_z_He_3 = 50.
recfast_x_He0_trigger = 0.995
recfast_x_He0_trigger2 = 0.995
recfast_x_He0_trigger_delta = 0.01
recfast_x_H0_trigger = 0.995
recfast_x_H0_trigger2 = 0.995
recfast_x_H0_trigger_delta = 0.01

recfast_H_frac=1.e-3

reionization_z_start_max = 50.
reionization_sampling=1.e-2
reionization_optical_depth_tol=1.e-2
reionization_start_factor=8.

thermo_rate_smoothing_radius=50

start_small_k_at_tau_c_over_tau_h = 0.0004
start_large_k_at_tau_h_over_tau_k = 0.15

# *** Precision of the integration

# tol_tau_approx controls the precision of the root finding algorithms used to
# derive the following quantities:
#   - the switching times for the approximations
#   - the initial time for the integration of the system
#   - a_equality
tol_tau_approx=1.e-5




# =========================================================
# =                     Approximations                    =
# =========================================================



# ********* SUMMARY OF THE APPROXIMATIONS *********

### Snippet from perturbations.h.  The position in the list correspond to the number of
### the approximation scheme (starting from 0).
enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS,no_tca};
enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};
enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};

### Same for the second-order perturbations
enum tca2_method {tca2_none, tca2_zero};
enum rsa2_method {rsa2_none, rsa2_null};
enum ufa2_method {ufa2_none, ufa2_null};
enum nra2_method {nra2_none, nra2_all, nra2_fluid};




# ********* TIGHT COUPLING APPROXIMATION *********


## ***   First order  ***

tight_coupling_approximation = 6
tight_coupling_trigger_tau_c_over_tau_h=0.015
tight_coupling_trigger_tau_c_over_tau_k=0.01



## ***   Second order  ***
tight_coupling_approximation_2nd_order = 0
tight_coupling_trigger_tau_c_over_tau_h_2nd_order = 0.020;
tight_coupling_trigger_tau_c_over_tau_k_2nd_order = 0.015;





# ********* RADIATION STREAMING APPROXIMATION *********

## ***   First order  ***

# The RSA substitutes the crazy oscillations of the photon & neutrino moments
# at late times with their average (see fig. 8 of Blas et al.).
# To turn off the rsa approximation , set radiation_streaming_approximation = 3. 
# This is not very useful, though, since the result will just be a big mess
# at late times for all photon & neutrino multipoles.  Probably, that won't affect
# the results, but it is unnecessary to compute all those oscillations, and anyway
# your sampling won't be fine enough to get them.
# It is also good to keep the RSA approximation because it relieves the truncation
# effects.  We know that the reflection effects get worse and worse with time,
# so using RSA from a certain point avoids this issue.
radiation_streaming_approximation = 1 # 2
radiation_streaming_trigger_tau_over_tau_k = 200.  # 120
radiation_streaming_trigger_tau_c_over_tau = 40.


## ***   Second order  ***
# Note that the above flag "radiation_streaming_trigger_tau_c_over_tau" affects also the
# 2nd-order RSA as it is used in the thermodynamics module.  The effect of that flag is to
# start the RSA only after recombination.
# Set radiation_streaming_trigger_tau_over_tau_k_2nd_order to a small number (e.g. 0.001)
# and radiation_streaming_approximation_2nd_order=0 (rsa_null) in order to stop evolving
# the photons at the same time after recombination, regardless of the wavenumber.
radiation_streaming_approximation_2nd_order = 0
radiation_streaming_trigger_tau_over_tau_k_2nd_order = 200



# ********* ULTRA RELATIVISTIC FLUID APPROXIMATION *********

## ***   First order  ***

# To turn off the ufa approximation, set it to 3 or increase the ur_fluid_trigger_tau_over_tau_k to 
# a very high number (e.g. 10000).
# If you turn off the ufa, and do not use a high l_max_ur (>100), be prepared to have
# numerical noise such as the red curve in fig. 6 of Blas et al. 2010.
ur_fluid_approximation = 1 # 2
ur_fluid_trigger_tau_over_tau_k = 50 # 18


## ***   Second order  ***
ur_fluid_approximation_2nd_order = 0
ur_fluid_trigger_tau_over_tau_k_2nd_order = 50




# ********* NO RADIATION APPROXIMATION *********

## ***   Second order  ***
Stop evolving the radiation species (photon temperature and polarization, neutrinos) when the radiation density is
below a certain treshold with respect to the matter density.  Turn on this approximation if you are not interested
into radiation multipoles today.  Note that this approximation does not affect the Cl's or the bispectrum, as these
only depend on the multipoles computed during recombination (at least for what concerns the intrinsically second-order
terms).
no_radiation_approximation_2nd_order = 2
no_radiation_approximation_rho_m_over_rho_r_2nd_order = 100



# ********* NCDM FLUID APPROXIMATION *********
ncdm_fluid_approximation = 2
ncdm_fluid_trigger_tau_over_tau_k = 1000.
tol_ncdm = 1.e-4


# transfer_cut=1 #0=none,1=osc,2=cl #segfault with zero, watch it!
transfer_cut_threshold_osc=0.005 # with 0.005, more smooth than when smaller for l>2000 WATCH IT
transfer_cut_threshold_cl=1.e-8 # not robust if tilted or if one Delta_l(k) oscillation tangents zero

evolver=1

l_switch_limber = 40.
accurate_lensing=0
num_mu_minus_lmax = 1000.
delta_l_max = 1000.




