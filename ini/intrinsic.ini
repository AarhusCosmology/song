# ==========================================================================
# =               Parameter file for the intrinsic bispectrum              =
# ==========================================================================

## Example input file to compute the intrinsic bispectrum of the cosmic
## microwave background with SONG, and to measure its observability.
##
## The bispectrum will be computed in temperature and polarisation, using the LCDM
## cosmological model with Planck parameters. Its observability will be estimated
## using the Fisher formalism, the resulting Fisher matrix printed to screen.
##
## To make a quick test run to check that SONG runs fine, execute:
##     ./song ini/intrinsic.ini pre/quick_song_run.pre.
## The computation should take less than a minute, but the result will have
## an extremely small angular resolution (l_max=100); however, it is a good 
## test for SONG as all its modules will be executed.
##
## To obtain a physically relevant result, use any of the .pre files in the 'pre'
## directory. For example, for a low precision run try:
##     ./song ini/intrinsic.ini pre/sn_pol_10percent_lmax2000.pre
## The resulting signal-to-noise (sn) will have a moderate angular resolution
## (l_max=2000) and will be accurate to the 10% level for both temperature and
## polarisation. This calculation is likely to take a couple of hours on an 8-core
## machine.
##
## To speed up the computation of the intrinsic bispectrum, exclude polarisation
## (eBisp) from the output field below. You can then expect to obtain a
## 10%-precise result in less than an hour on an 8-core machine by running:
##     ./song ini/intrinsic.ini pre/sn_t_10percent_lmax2000.pre
##
## To fully use the parallelisation, make sure that the openmp flags are enabled
## in the makefile and that the OMP_NUM_THREADS environment variable is set to
## whatever number of cores you want to use.
##
## This file mixes CLASS and SONG parameters. For a more detailed description of
## each parameter, refer to ini/explanatory.ini in the SONG folder and to
## explanatory.ini in the CLASS folder.

# What to compute
output = tBisp, eBisp, fisher
bispectrum_types = intrinsic, local, equilateral
lensing = no

# Which azimuthal modes to compute? Write them as comma separated values.
# 0 -> scalars
# 1 -> vectors
# 2 -> tensors
# For example, modes_song=0,1,2 computes scalar, vector and tensor modes
# In general, the non-sacalar (|m|!=0) modes give a negligible contribution 
# to the intrinsic bispectrum (see sec. 6.4.2 of http://arxiv.org/abs/1405.2280).
modes_song = 0

## Planck+WP+highL+BAO - Planck paper XVI, 2013
h = 0.6777
T_cmb = 2.7255
omega_b = 0.022161
omega_cdm = 0.11889
N_eff = 3.04
Omega_k = 0.
reio_parametrization = reio_none
tau_reio = 0.0952
k_pivot = 0.05
A_s = 2.2138e-9
n_s = 0.9611
YHe = 0.2477055

# Noise and resolution parameters for the Planck experiment, taken from the Planck
# Explanatory Supplement pag. 35 and multiplied by T_cmb=2.7255. We consider the 
# following frequency channels: 100, 143, 217, 353 Ghz. The noise on polarisation is
# taken as two times the temperature noise, because only half of the detectors in Planck
# have polarization. See ini/bispectra.ini for the same parameters for the CoRE and
# Prism experiments. Apart from l_max_scalars, these parameters affect only the Fisher
# matrix computation; comment them out to consider an ideal experiment.
# l_max_scalars = 2500
# experiment_beam_fwhm =  9.66,   7.27,     5.01,    4.86
# experiment_noise_t =   10.77,    6.4,    12.48,   41.35
# experiment_noise_e =   21.54,   12.8,    24.96,   82.70
# experiment_f_sky = 1

# Initial conditions
ic = ad
ic_song = ad
primordial_local_fnl_phi = 0

# Options for the differential system
gauge = newtonian
phi_equation_song = Z
perturbed_recombination_song = yes

# Scattering line of sight sources at second order
include_pure_scattering_song = yes
include_quad_scattering_song = yes
use_delta_tilde_in_los = yes

# Metric line of sight sources at second order
include_pure_metric_song = no
include_quad_metric_song = no
include_sachs_wolfe_song = yes
include_integrated_sachs_wolfe_song = yes
only_early_isw = yes
use_exponential_potentials = yes

# Storage options of intermediate results. It is recommended to turn on the
# storage for high precision runs (<=5%) unless you are using a machine with
# shared memory
root = output/
store_run = no
store_sources = no
store_transfers = no
store_bispectra = no
run_directory = test_run
data_directory = 
append_date = no

# Technical parameters
background_verbose = 1
thermodynamics_verbose = 1
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1
perturbations_verbose = 1
perturbations2_verbose = 2
transfer_verbose = 1
transfer2_verbose = 1
bessels_verbose = 1
bessels2_verbose = 1
bispectra_verbose = 1
fisher_verbose = 1
format = camb

# Write to files transfer functions and quadratic sources to file for a specific
# (k1,k2,k3) configuration. Make sure to create out directory if needed.
dump_debug_files = yes
transfers_filename = early_transfers2.txt
quadsources_filename = quadsources.txt
quadliouville_filename = quadliouville.txt
quadcollision_filename = quadcollision.txt
index_k1_debug = 19
index_k2_debug = 17
index_k3_debug = 10
l_max_debug = 5

# Write to file transfer functions and quadratic sources as a function of conformal
# time for a specific (k1,k2,k3) configuration. These wavemodes will be added to SONG
# k sampling, so expect SONG results to change slightly. Also note that SONG will issue
# an error if any of the triplets does not satisfy the triangular condition,
# while it will output an empty file for each triplet where k2>k1.
# Specifying configurations where at the triangular limit, like (0.1,0.1,0.2)
# will likely result in numerical instability and an error message, so use
# something like (0.1,0.1,0.19999) instead.
k1_out =  0.1,  0.01
k2_out = 0.02, 0.002
k3_out = 0.09, 0.009


# Same but for a fixed value of conformal time tau
# z_out = 0, 500
# tau_out = 280

# Set to yes if you want SONG to output the first-order perturbations as well. They
# will be produced for the k values in k1_out, k2_out, k1_index_out and k2_index_out.
# output_class_perturbations = yes

# Set to yes if you want SONG to output the quadratic sources as well for the
# triplets in k1_out, k2_out, k3_out
output_quadratic_sources = yes

# Write to file transfer functions and quadratic sources as a function of conformal
# time for a specific (index_k1,index_k2,index_k3) configuration. These options have
# no effect on SONG results, and are compatible with k1_out, k2_out and k3_out.
# k1_index_out = 19
# k2_index_out = 17
# k3_index_out =  7





